name: CI/CD Pipeline

on:
  push:
    branches: [ main, Develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build dockeractor image
      uses: docker/build-push-action@v2
      with:
        context: ./Security_Bots/Docker-BadActor/
        file: ./Security_Bots/Docker-BadActor/Dockerfile
        load: true
        tags: dockeractor:latest

    - name: Build basictrustbot image
      uses: docker/build-push-action@v2
      with:
        context: ./Security_Bots/TheBasicBot/
        file: ./Security_Bots/TheBasicBot/Dockerfile
        load: true

    - name: Build dockerindocker image
      uses: docker/build-push-action@v2
      with:
        context: ./Security_Bots/Docker-In-Docker/
        file: ./Security_Bots/Docker-In-Docker/Dockerfile
        load: true
  
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check image size dockeractor
      run: |
        docker images --format "{{.Repository}}:{{.Tag}}\t{{.Size}}"
        SIZE=$(docker image inspect dockeractor:latest --format='{{.Size}}')
        if [ $SIZE -gt 500000000 ]; then
          echo "Image size is too large"
          exit 1
        fi
    - name: Check image size trustbot
      run: |
        docker images --format "{{.Repository}}:{{.Tag}}\t{{.Size}}"
        SIZE=$(docker image inspect basictrustbot:latest --format='{{.Size}}')
        if [ $SIZE -gt 500000000 ]; then
          echo "Image size is too large"
          exit 1
        fi
    - name: Check image size dockerindocker
      run: |
        docker images --format "{{.Repository}}:{{.Tag}}\t{{.Size}}"
        SIZE=$(docker image inspect docker-in-docker:latest --format='{{.Size}}')
        if [ $SIZE -gt 500000000 ]; then
          echo "Image size is too large"
          exit 1
        fi
